//const person=["Nikhom","Peter","Tony","Steve"]

/*
const a=person.map((p,index)=>`${p} good boy`)
console.log(a)
*/

/*
const b=person.map((p,index)=>{
  const c="bad boy";
  return `${p} ${c}`;
})

console.log(b);
*/

/*
const c=person.map((p,index)=>({
  name:p
}))
console.log(c);
*/

/*
const c=person.map((p,index)=>{
  return{
    name:p
  }
});
console.log(c)
*/


//Full old class pattern
//because each "function" is object and has "this" in itself
//if use "function" in "function" it will confuse has 2 "this"
/*
function People(firstName,hobby){
   this.firstName=firstName,
   this.hobby=hobby
  
   this.showHobby=function(){
    let self=this // separate outside "this" from inner "this"
    return this.hobby.map(function(a){
      console.log(self.firstName+' love '+a)
    })
   }
}

let people=new People('Alex',["Soccer","PingPong","Swimming"])

people.showHobby();
*/

/*
//use bind(this) to bind with outsid "this"
function People(firstName,hobby){
   this.firstName=firstName,
   this.hobby=hobby
  
   this.showHobby=function(){
     return this.hobby.map(
       (function(a){console.log(this.firstName+ ' love '+a)}).bind(this)
     )
   }
}

let people=new People('Alex',["Soccer","PingPong","Swimming"])

people.showHobby();
*/


//use arrow function , it has no inside "this" so it will not mixing 
function People(firstName,hobby){
    this.firstName=firstName,
    this.hobby=hobby
  
    this.showHobby=function(){
  
      return this.hobby.map((a,index)=>{
       console.log(this.firstName+' love '+a)
     })
    }
 }
 let people=new People('Alex',["Soccer","PingPong","Swimming"])
 people.showHobby();
 